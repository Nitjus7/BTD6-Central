input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    margin: 0; 
}
/* TEMPORARY CSS ALERT TEMPORARY CSS ALERT */
#MasterBuilder {
    margin-bottom: 2rem;
}


.noMarginTop {
    margin-top: 0;
}
button:not(.wip):hover {
    cursor: pointer;
}
.optionsBar {
    margin-top: 75px;
}
.actuallyTakeMeHomeContainer {
    position: fixed;
    transform: scale(1.05);
    top: 80px;
    left: 3vw;
    padding: 0.4rem;
    background: var(--buttonColor1);
    box-shadow: 0px 0px 5px var(--shadowColor);
    border-radius: 100%;
    transition: all 0.5s;
    z-index: 5;
    user-select: none;
}
.actuallyTakeMeHomeContainer:hover {
    background-color: var(--buttonColor2);
  }
h1, h2, .attackName {
    font-family: var(--secondaryFont);
}
.name {
    text-align: center;
    margin-bottom: 0;
    padding-bottom: 0;
}
.tier {
    text-align: center
}
.paragonName, .paragonDegree {
    color: var(--textColor3)
}
.degreeEditorContainer {
    border-bottom: 1px var(--textColor) solid;
}
.editorOptionContainer {
    background-color: var(--contentBackground1);
    border-radius: 5px;
    padding: 1rem;
    border: 1px var(--textColor) solid;
}
.editorOptionContainer.unchecked > *:not(.checkmark) {
    opacity: 0.25
}
#pikachuIChooseYou, #charizardIChooseYou {
    opacity: 1
}
#pikachuIChooseYou:hover, #charizardIChooseYou:hover {
    cursor: pointer
}
.calculateParagonDegreeButton {
    background-color: var(--buttonColor1);
    border-radius: 5px;
    color: var(--textColor);
    border: 1px var(--textColor) solid;
    padding: 0.5rem;
    margin: 0.5rem 0 0 0;
    transition: background-color 0.5s;
}
.calculateParagonDegreeButton:hover {
    background-color: var(--buttonColor2);
}
.result {
    margin-left: 0.5rem;
}
@media only screen and (max-width: 768px) {
    .result {
        margin: 0
    }
}
.degreeEditorContainer {
    display: flex;
    justify-content: center;
    align-items: center;
}
.degreeEditorContainer > * {
    margin: 1.5rem;
}
.degreeCalculatorContainer {
    display: block;
}
.valueInput {
    font-family: var(--primaryFont);
    width: 40px;
    height: 20px;
    border-radius: 10px;
    text-align: center;
    color: var(--textColor);
    outline: 1px var(--textColor) solid;
    background-color: var(--contentBackground3);
    border: none;
    transition: all 0.25s;
}
.valueInput.wider {
    width: 65px;
}
.valueInput.muchWider {
    width: 100px;
}
.valueInput:focus {
    outline: 1px var(--textColor2) solid;
}

.toolsPickContainer {
    display: none;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}
.toolButton {
    background-color: var(--buttonColor1);
    padding: 0.5rem;
    border-radius: 5px;
    border: 1px var(--textColor) solid;
    color: var(--textColor);
    font-size: 1rem;
    transition: 0.15s ease-in-out background-color;
}
.toolButton:hover {
    background-color: var(--buttonColor2);
}

.heroLevelCalculatorContainer {
    display: none;
    text-align: center;
}
.heroLevelCalcHeader {
    margin-top: 75px;
}

.paragonDegreeCalculatorContainer {
    display: none;
    text-align: center;
}
.paragonDegreeCalcHeader {
    margin-top: 75px;
}

.calcInput {
    margin: 0.25rem;
}

.heroLevelByContainer {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
}
.lineBreak {
    width: 100%;
}

.towerPickContainer > * {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    justify-items: center;
}
.towerPickContainer > * > * {
    text-align: center;
    justify-content: center;
    align-items: center;
}
.towerPickContainer button {
    color: var(--textColor);
    height: 2rem;
    margin: 0.5rem 1rem 0.5rem 1rem;
    border-radius: 5px;
    border: 1px var(--textColor) solid;
    width: 85%;
    max-width: 850px;
}
.towerPickContainer button:not(.wip):not(.paragon) {
    background-color: var(--buttonColor1);
    height: 4rem;
    transition: 0.5s ease;
}
.towerPickContainer .paragon:not(.wip) {
    background-color: var(--buttonColor3);
    border: 1.5px var(--contentOutline3) solid;
    height: 4rem;
    transition: 0.5s ease;
    font-family: var(--primaryFont);
    font-size: 1.5rem;
}

.towerPickContainer button:not(.wip):hover {
    transform: scale(1.02)
}
.towerPickContainer button.wip {
    background-color: var(--contentBackground1);
}

.paragonContainer {
    margin-top: 5rem;
}
.attackName {
    text-align: center;
    padding: 2rem 0 0 0;
    margin: 0;
}
.attackType {
    text-align: center;
    opacity: 0.7;
    padding: 0;
    margin-top: 0;
}
.attackDiv {
    display: flex;
    flex-wrap: wrap;
    text-align: center;
    justify-content: center;
    align-items: center;
    padding-bottom: 1.5rem;
    border-bottom: 1px var(--textColor) dotted;
}
.attackDiv > * {
    background-color: var(--contentBackground1);
    margin: 1rem;
    padding: 0 1rem;
    border-radius: 5px;
    box-shadow: 0px 0px 5px var(--shadowColor);
}
.damageDiv {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    flex-shrink: 1;
    flex-basis: 50%;
    width: 800px;
    background-color: var(--contentBackground1);
    border-radius: 5px;
    box-shadow: 0px 0px 5px var(--shadowColor);
    margin: 0 2rem 0.5rem 2rem;
}
.lifespanDiv {
    display: flex;
    flex-wrap: wrap;
    flex-basis: 40%;
    align-items: center;
    justify-content: space-around;
}
.time {
    margin-left: 1rem;
}
.sectionTitle {
    border-right: 1px var(--textColor) solid;
    padding-right: 1rem;
}
@media only screen and (max-width: 768px) {
    .damageDiv {
        width: auto;
        justify-content: auto;
    }
}
.damageDiv > * {
    margin: 0.5rem;
}
.filterSelect {
    display: none;
}
/* .attackDiv > * {
    margin: 0.75rem;
    padding: 0.25rem 0.5rem;
    background-color: var(--contentBackground1);
    border-radius: 5px;
    border: 1px solid var(--textColor)
} */
.special {
    background-color: var(--contentBackground2);
    border: 1px var(--contentOutline2) solid;
}
.description, .special {
    max-width: 800px;
}
.frequency, .emitsFrom {
    flex-basis: 40%;
}
@media only screen and (max-width: 760px) {
    .frequency, .emitsFrom {
        width: 35%
    }
    .sectionTitle {
        border-right: none;
        padding-right: 0;
    }
    .damageDiv {
        flex-basis: 100%;
    }
}